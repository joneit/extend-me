"use strict";function extend(t,e){switch(arguments.length){case 0:e={};break;case 1:switch(typeof t){case"object":e=t,t=void 0;break;case"string":e={};break;default:throw"Single-parameter overload must be either string or object."}break;case 2:if("string"!=typeof t||"object"!=typeof e)throw"Two-parameter overload must be string, object.";break;default:throw"Too many parameters"}function r(){this.preInitialize&&this.preInitialize.apply(this,arguments),initializePrototypeChain.apply(this,arguments),this.postInitialize&&this.postInitialize.apply(this,arguments)}r.extend=extend,r.getClassName=getClassName,r.parent=parentConstructor;var o,n,i=r.prototype=Object.create(this.prototype);for(o in i.constructor=r,(t=t||i.$$CLASS_NAME||i.name)&&(Object.defineProperty(r,"name",{value:t,configurable:!0}),i.$$CLASS_NAME=t),e)(n=Object.getOwnPropertyDescriptor(e,o))&&Object.defineProperty(i,o,n);return"function"==typeof this.postExtend&&this.postExtend(i),r}function Base(){}function initializePrototypeChain(){var o=this,n=arguments;!function t(e){var r=Object.getPrototypeOf(e);r.constructor!==Object&&(t(r),r.hasOwnProperty("initialize")&&r.initialize.apply(o,n))}(o)}function getClassName(){return this.prototype.$$CLASS_NAME||this.prototype.name||this.name}function parentConstructor(t){var e=this.prototype;if(e)for(;e=Object.getPrototypeOf(e),t&&e&&e.constructor.name!==t;);return e&&e.constructor}Base.prototype={constructor:Base.prototype.constructor,getClassName:function(){return this.$$CLASS_NAME||this.name||this.constructor.name},get super(){return Object.getPrototypeOf(Object.getPrototypeOf(this))},superMember:function(t){for(var e=this.super;!(e=Object.getPrototypeOf(e)).hasOwnProperty(t););return e&&e[t]},superMethod:function(t){var e=this.superMember(t);if("function"!=typeof e)throw new TypeError("this."+t+" is not a function");return e},callSuperMethod:function(t){return this.superMethod(t).apply(this,Array.prototype.slice.call(arguments,1))}},(Base.extend=extend).Base=Base,module.exports=extend;